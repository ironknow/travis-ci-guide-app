buildscript {
    repositories {
        mavenCentral()
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.+'
    }
}

repositories {
    mavenCentral()
    maven { url 'https://maven.fabric.io/public' }
}

apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply from: '../config/quality/quality.gradle'


android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId "eco.guideapp"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 4
        versionName "0.0.8"
        multiDexEnabled true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        config {
            storeFile file("../key/app.jks")
            storePassword "12345678"
            keyAlias "guide"
            keyPassword "12345678"
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField("String", "ENDPOINT_URL", "\"https://guideapp-br.appspot.com/_ah/api/guideAppApi/v1/\"")
            signingConfig signingConfigs.config
        }

        debug {
            buildConfigField("String", "ENDPOINT_URL", "\"https://guideapp-br.appspot.com/_ah/api/guideAppApi/v1/\"")
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    compile "com.android.support:design:$rootProject.supportLibraryVersion"
    compile "com.android.support:recyclerview-v7:$rootProject.supportLibraryVersion"
    compile "com.android.support:palette-v7:$rootProject.supportLibraryVersion"
    compile "com.android.support:cardview-v7:$rootProject.supportLibraryVersion"
    compile "com.android.support:support-v13:$rootProject.supportLibraryVersion"

    compile "com.github.bumptech.glide:glide:$rootProject.glideVersion"

    compile "com.squareup.retrofit2:retrofit:$rootProject.retrofitVersion"
    compile "com.squareup.retrofit2:converter-gson:$rootProject.retrofitVersion"
    compile "com.squareup.okhttp3:logging-interceptor:$rootProject.loggingInterceptorVersion"

    compile "com.google.guava:guava:$rootProject.guavaVersion"
    compile "com.firebase:firebase-jobdispatcher:$rootProject.jobdispatcherVersion"

    compile "com.google.android.gms:play-services-maps:$rootProject.playServicesVersion"
    compile "com.facebook.stetho:stetho:$rootProject.stethoVersion"

    compile "com.android.support:multidex:$rootProject.multidexVersion"
    compile "com.google.firebase:firebase-core:$rootProject.firebaseVersion"

    //Testing
    testCompile 'junit:junit:4.12'
    androidTestCompile 'junit:junit:4.12'
    androidTestCompile "com.android.support:support-annotations:$rootProject.supportLibraryVersion"
    androidTestCompile 'com.android.support.test:runner:0.5'
    androidTestCompile 'com.android.support.test:rules:0.5'
    compile('com.crashlytics.sdk.android:crashlytics:2.6.7@aar') {
        transitive = true;
    }
}

apply plugin: 'com.google.gms.google-services'